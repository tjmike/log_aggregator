syntax = "proto3";

package proto;

option java_package = "tjmike.datastax.proto";
option java_outer_classname = "LoggerProtos";

/**
  * This is the file format and over the wire protocol for our log server.
  *
  * Fields:
  *       id: unique ID for this log file (assume log file name is unique for all logs)
  *  session: the log tail session - seconds since epoc used for ordering log entries
  *           we assume that two different sessions will never be started in the same
              second for a given log file
  *      seq: the sequence order of messages, starting at 1 and incrementing by one
  *           a missing sequence number means a missing log entry
  *  payload: the raw log data we are archiving.
  *
  *  A log file can then be assembled by ordering the fields for a give id (log file)
  * session,seq
  *
  * An error can be detected if there is a missing seq for a given session.
  *
  *
**/
message LogPart {
	 string id = 1;
	 fixed64 session = 2;
	 int64   seq = 3;
	 bytes payload = 4;

}

